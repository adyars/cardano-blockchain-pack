cardano.plugin.transactionAction=Cardano Transaction Action

defaults.cardanoDefaultBackendPlugin.header.config=Configure Cardano Default Backend

cardano.prop.subheader.backendConfig=Backend Configuration
cardano.prop.subheader.backendConfig.message="<b>Cardano Default Backend Configurator</b>" is detected in this app's Plugin Default Properties.<br>This plugin will follow default configurations.

cardano.prop.networkType=Network Type
cardano.prop.networkType.desc="mainnet" uses assets with actual monetary value.<br>Please use "testnet" for testing purposes.
cardano.prop.networkType.mainnet=Mainnet
cardano.prop.networkType.legacyTestnet=Legacy Testnet
cardano.prop.networkType.previewTestnet=Preview Testnet
cardano.prop.networkType.preprodTestnet=Pre-production Testnet
cardano.prop.backendService=Backend Service
cardano.prop.backendService.blockfrost=Blockfrost
cardano.prop.backendService.koios=Koios
cardano.prop.backendService.dandelion=Dandelion GraphQL
cardano.prop.backendService.customGraphql=Custom GraphQL API
cardano.prop.blockfrostProjectKey=Blockfrost Project Key
cardano.prop.blockfrostProjectKey.desc=Go to <b><a target="_blank" href="https://blockfrost.io/">blockfrost.io</a></b> and sign up for an account. There is a free account option. Paste in your generated project API key.
cardano.prop.graphqlEndpointUrl=GraphQL Endpoint URL
cardano.prop.header.storeToForm=Store Response To Form
cardano.prop.header.storeToWorkflowVariable=Store Response To Workflow Variable
cardano.prop.wfMapping.wfTransactionSuccessful=Is Transaction Successful
cardano.prop.wfMapping.wfTransactionValidated=Is Transaction Validated
cardano.prop.wfMapping.wfTransactionValidated.desc=<u>Possible values</u>:<br>Waiting confirmation -> <b>pending</b><br>Confirmed -> <b>true</b><br>Unexpected issue -> <b>false</b>
cardano.prop.wfMapping.wfTransactionId=Transaction ID
cardano.prop.wfMapping.wfTransactionExplorerUrl=Transaction Explorer URL
cardano.prop.feeLimit=Fee Limit (ADA)
cardano.prop.feeLimit.desc=The maximum limit for transaction fees in units of ADA.<br>Value can only contain max 6 decimal places.<br>If this is empty, no limit is applied.

modifier.CardanoTransactionExecutor.header.config=Configure Cardano Transaction Executor
modifier.CardanoTransactionExecutor.header.transactionProperties=Transaction Properties
modifier.CardanoTransactionExecutor.subheader.walletConfig=Wallet Configuration
modifier.CardanoTransactionExecutor.walletHandler=Wallet Handler
modifier.CardanoTransactionExecutor.walletHandler.internal=Internal
modifier.CardanoTransactionExecutor.walletHandler.cip30Wallet=CIP-30 Wallet
modifier.CardanoTransactionExecutor.formDefId=Form (Account Data)
modifier.CardanoTransactionExecutor.accountMnemonic=Account Mnemonic Field
modifier.CardanoTransactionExecutor.accountMnemonic.desc=Mnemonic phrase field in a form where account data is stored.
modifier.CardanoTransactionExecutor.accountDataRecordId=Record ID (Account Data)
modifier.CardanoTransactionExecutor.accountDataRecordId.desc=Type in a field ID from the current form that is mapped to this process activity, that represents the record ID for the Account Data form.
modifier.CardanoTransactionExecutor.subheader.transactionParams=Transaction Parameters
modifier.CardanoTransactionExecutor.txAction=Action To Perform
modifier.CardanoTransactionExecutor.metadata=Transaction Metadata
modifier.CardanoTransactionExecutor.metadata.fieldId=Field ID
modifier.CardanoTransactionExecutor.formDefIdStoreTxData=Form

action.TokenTransferAction.header.config=Configure Token Transfer
action.TokenTransferAction.formDefId=Form
action.TokenTransferAction.header.transferAda=Transfer ADA
action.TokenTransferAction.header.transferNativeTokens=Transfer Native Tokens
action.TokenTransferAction.header.transferNfts=Transfer NFTs
action.TokenTransferAction.adaDatalistId=List (Transfer ADA)
action.TokenTransferAction.adaTransfers=ADA Transfers
action.TokenTransferAction.nativeTokenDatalistId=List (Transfer Native Tokens)
action.TokenTransferAction.nativeTokenTransfers=Native Token Transfers
action.TokenTransferAction.nftDatalistId=List (Transfer NFT)
action.TokenTransferAction.nftTransfers=NFT Transfers
action.TokenTransferAction.getDataFromList=Get Data from List
action.TokenTransferAction.receiverAddress=Receiver Address
action.TokenTransferAction.transferAmount=Transfer Amount
action.TokenTransferAction.policyId=Policy ID
action.TokenTransferAction.assetName=Asset Name

action.TokenMintAction.header.config=Configure Token Mint
action.TokenMintAction.formDefId=Form
action.TokenMintAction.subheader.mintingConfig=Minting Configuration
action.TokenMintAction.mintingPolicyHandling=Policy Handling
action.TokenMintAction.mintingPolicyHandling.generateNew=Generate New
action.TokenMintAction.mintingPolicyHandling.reuse=Reuse
action.TokenMintAction.useCustomPolicyScript=Enable Custom Policy Script
action.TokenMintAction.manualPolicyScript=Policy Script (Manual)
action.TokenMintAction.manualPolicyScript.desc=If you have your own policy script to use, simply paste in the policy script JSON here.<br>To automatically generate sig key hash, use #policyKey# hash variable.<br>Accepts hash variables.<br>If left empty, by default it generates an "All" type 1 signature policy.
action.TokenMintAction.manualPolicyKeys=Policy Secret Keys (Manual)
action.TokenMintAction.manualPolicyKeys.desc=If your pasted policy script above contains explicitly added signature key hash(es), paste in the policy secret key(s) here, separated by semicolon (;).<br>Accepts hash variable.
action.TokenMintAction.policyId=Policy ID
action.TokenMintAction.policyId.desc=Only accepts a hash variable that points to the stored policy ID.
action.TokenMintAction.policyScript=Policy Script
action.TokenMintAction.policyScript.desc=Only accepts a hash variable that points to the stored policy script.
action.TokenMintAction.policyKeys=Policy Secret Keys
action.TokenMintAction.policyKeys.desc=Only accepts a hash variable that points to the encrypted stored policy secret key(s).
action.TokenMintAction.header.mintNativeTokens=Mint Native Tokens
action.TokenMintAction.getDataFromList=Get Data from List
action.TokenMintAction.nativeTokenDatalistId=List (Mint Native Tokens)
action.TokenMintAction.assetName=Asset Name
action.TokenMintAction.mintAmount=Mint Amount
action.TokenMintAction.receiverAddress=Receiver Address
action.TokenMintAction.nativeTokenMints=Native Token Mints
action.TokenMintAction.header.mintNfts=Mint NFTs
action.TokenMintAction.nftDatalistId=List (Mint NFTs)
action.TokenMintAction.nftAssetNameColumn=NFT Name
action.TokenMintAction.nftMints=NFT Mints
action.TokenMintAction.assetDesc=NFT Description
action.TokenMintAction.fileName=File Name
action.TokenMintAction.fileType=File Type
action.TokenMintAction.ipfsContentId=IPFS Content ID

action.TokenBurnAction.header.config=Configure Token Burn
action.TokenBurnAction.formDefId=Form
action.TokenBurnAction.subheader.burnConfig=Burning Configuration
action.TokenBurnAction.policyScript=Policy Script
action.TokenBurnAction.policyScript.desc=The policy script that was previously used to mint the tokens below. Accepts hash variable.
action.TokenBurnAction.policyKeys=Policy Secret Keys
action.TokenBurnAction.policyKeys.desc=The secret key(s) that was previously used to sign the mint policy above.<br>Only accepts a hash variable that points to the encrypted stored policy secret key(s).
action.TokenBurnAction.header.burnNativeTokens=Burn Native Tokens
action.TokenBurnAction.getDataFromList=Get Data from List
action.TokenBurnAction.nativeTokenDatalistId=List (Burn Native Tokens)
action.TokenBurnAction.assetName=Asset Name
action.TokenBurnAction.burnAmount=Burn Amount
action.TokenBurnAction.nativeTokenBurns=Native Token Burns
action.TokenBurnAction.header.burnNfts=Burn NFTs
action.TokenBurnAction.nftDatalistId=List (Burn NFTs)
action.TokenBurnAction.nftBurns=NFT Burns

process.cardanogenerateaccounttool.header.config=Configure Cardano Generate Account Tool
process.cardanogenerateaccounttool.helplink=https://dev.joget.org/community/display/marketplace/Cardano+Generate+Account+Tool
process.cardanogenerateaccounttool.header.storeToForm=Store Account Data To Form
process.cardanogenerateaccounttool.formId=Form
process.cardanogenerateaccounttool.header.fieldMapping=Field Mapping
process.cardanogenerateaccounttool.fieldMapping.accountBaseAddress=Account Base Address
process.cardanogenerateaccounttool.fieldMapping.accountBaseAddress.desc=A unique identifier for a Cardano account. Typically stored as a record ID.
process.cardanogenerateaccounttool.fieldMapping.accountMnemonicField=Account Mnemonic Phrase (encrypted)
process.cardanogenerateaccounttool.fieldMapping.accountMnemonicField.desc=Account Mnemonic Phrase <b>MUST</b> be strictly secured at all times, and only viewable to the intended user.<br>This value will be stored as encrypted value in the database.<br><b>Anyone who possesses this phrase has full unrestricted control and can do irreparable damage!</b>
process.cardanogenerateaccounttool.fieldMapping.accountOwnerField=Account Owner Field
process.cardanogenerateaccounttool.fieldMapping.accountOwnerValue=Account Owner Value
process.cardanogenerateaccounttool.fieldMapping.accountOwnerValue.desc=Accepts a hash variable. Typically points to an actual user (e.g.: Joget username).
process.cardanogenerateaccounttool.fieldMapping.isTestAccount=Is Test Account Flag
process.cardanogenerateaccounttool.fieldMapping.accountEnterpriseAddress=Account Enterprise Address
process.cardanogenerateaccounttool.header.storeToWorkflowVariable=Store Data To Workflow Variable
process.cardanogenerateaccounttool.wfMapping.wfIsTestAccount=Is Test Account Flag

process.cardanosendtransactiontool.header.config=Configure Cardano Send Transaction Tool
process.cardanosendtransactiontool.helplink=https://dev.joget.org/community/display/marketplace/Cardano+Send+Transaction+Tool
process.cardanosendtransactiontool.header.transactionProperties=Transaction Properties
process.cardanosendtransactiontool.formDefId=Form
process.cardanosendtransactiontool.subheader.assetConfig=Asset Configuration
process.cardanosendtransactiontool.paymentUnit=Payment Type
process.cardanosendtransactiontool.paymentUnit.lovelace=ADA
process.cardanosendtransactiontool.paymentUnit.nativeTokens=Native Token
process.cardanosendtransactiontool.paymentUnit.nft=NFT
process.cardanosendtransactiontool.policyId=Policy ID
process.cardanosendtransactiontool.policyId.desc=The policy ID that minted the token.
process.cardanosendtransactiontool.assetName=Asset Name
process.cardanosendtransactiontool.assetName.desc=The asset name of the token (e.g.: MyTestToken, My-First-NFT).
process.cardanosendtransactiontool.subheader.paymentConfig=Payment Configuration
process.cardanosendtransactiontool.senderAddress=Sender Address
process.cardanosendtransactiontool.senderAddress.desc=Address to send assets from.
process.cardanosendtransactiontool.accountMnemonic=Sender Account Mnemonic Phrase
process.cardanosendtransactiontool.accountMnemonic.desc=Mnemonic phrase of the sender account. Only accepts a hash variable that points to the encrypted stored mnemonic phrase.
process.cardanosendtransactiontool.multipleReceiverMode=Enable Multiple Receivers
process.cardanosendtransactiontool.datalistId=Datalist To Retrieve Receivers
process.cardanosendtransactiontool.receiverAddress=Receiver Address
process.cardanosendtransactiontool.receiverAddress.desc=Address to send assets to.
process.cardanosendtransactiontool.amount=Amount To Send
process.cardanosendtransactiontool.amount.desc=Amount of tokens to send.<br>For ADA specifically, amount can only contain max 6 decimal places.<br>Ensure that you comply with the <b><a target="_blank" href="https://docs.cardano.org/native-tokens/minimum-ada-value-requirement">minimum ADA requirement</a></b>.
process.cardanosendtransactiontool.subheader.additionalMetadata=Additional Metadata
process.cardanosendtransactiontool.metadata=Transaction Metadata
process.cardanosendtransactiontool.metadata.fieldId=Field ID
process.cardanosendtransactiontool.header.multiReceiverColumnMapping=Datalist Column Mapping (Multiple Receivers Mode)
process.cardanosendtransactiontool.receiverAddressColumn=Receiver Address
process.cardanosendtransactiontool.amountColumn=Amount

process.cardanominttokentool.header.config=Configure Cardano Mint Token Tool
process.cardanominttokentool.helplink=https://dev.joget.org/community/display/marketplace/Cardano+Mint+Token+Tool
process.cardanominttokentool.header.tokenProperties=Token Properties
process.cardanominttokentool.formDefId=Form
process.cardanominttokentool.subheader.mintingAccount=Minting Account
process.cardanominttokentool.senderAddress=Account Address
process.cardanominttokentool.senderAddress.desc=The address to mint and possess the minted asset.
process.cardanominttokentool.accountMnemonic=Account Mnemonic Phrase
process.cardanominttokentool.accountMnemonic.desc=Mnemonic phrase of the minting account. Only accepts a hash variable that points to the encrypted stored mnemonic phrase.
process.cardanominttokentool.subheader.mintingConfig=Minting Configuration
process.cardanominttokentool.mintingPolicyHandling=Minting Policy Handling
process.cardanominttokentool.mintingPolicyHandling.generateNew=Generate New
process.cardanominttokentool.mintingPolicyHandling.reuse=Reuse
process.cardanominttokentool.useCustomPolicyScript=Enable Custom Policy Script
process.cardanominttokentool.manualPolicyScript=Policy Script (Manual)
process.cardanominttokentool.manualPolicyScript.desc=If you have your own policy script to use, simply paste in the policy script JSON here.<br>To automatically generate sig key hash, use #policyKey# hash variable.<br>Accepts hash variables.<br>If left empty, by default it generates an "All" type 1 signature policy.
process.cardanominttokentool.manualPolicyKeys=Policy Secret Keys (Manual)
process.cardanominttokentool.manualPolicyKeys.desc=If your pasted policy script above contains explicitly added signature key hash(es), paste in the policy secret key(s) here, separated by semicolon (;).<br>Accepts hash variable.
process.cardanominttokentool.policyId=Policy ID
process.cardanominttokentool.policyId.desc=Only accepts a hash variable that points to the stored policy ID.
process.cardanominttokentool.policyScript=Policy Script
process.cardanominttokentool.policyScript.desc=Only accepts a hash variable that points to the stored policy script.
process.cardanominttokentool.policyKeys=Policy Secret Key
process.cardanominttokentool.policyKeys.desc=Only accepts a hash variable that points to the encrypted stored policy secret key.
process.cardanominttokentool.mintType=Mint Type
process.cardanominttokentool.mintType.nativeToken=Native Token
process.cardanominttokentool.mintType.nft=NFT
process.cardanominttokentool.tokenName=Token Name
process.cardanominttokentool.tokenName.desc=The token name (e.g.: MyFirstToken).
process.cardanominttokentool.tokenSymbol=Token Symbol
process.cardanominttokentool.tokenSymbol.desc=Typical 3 to 5 characters long, and all letters in UPPERCASE.
process.cardanominttokentool.amountToMint=Amount To Mint
process.cardanominttokentool.amountToMint.desc=Amount of native tokens to mint.
process.cardanominttokentool.subheader.additionalMetadata=Additional Metadata
process.cardanominttokentool.metadata=Metadata
process.cardanominttokentool.metadata.fieldId=Field ID
process.cardanominttokentool.nftName=NFT Name
process.cardanominttokentool.nftName.desc=The NFT name (e.g.: My-NFT-Test).
process.cardanominttokentool.nftDescription=NFT Description
process.cardanominttokentool.nftDescription.desc=To describe what this NFT is about.
process.cardanominttokentool.nftFileName=NFT File Name
process.cardanominttokentool.nftFileName.desc=The actual file name represented by this NFT
process.cardanominttokentool.nftFileType=NFT File Type
process.cardanominttokentool.nftFileType.imagePng=PNG
process.cardanominttokentool.nftFileType.imageJpeg=JPEG
process.cardanominttokentool.nftFileType.imageSvgXml=SVG
process.cardanominttokentool.ipfsCid=IPFS Content ID
process.cardanominttokentool.ipfsCid.desc=The IPFS content ID that you have obtained after uploading your file to an IPFS gateway.<br>Example: QmeRdF1aybs9VKMYKM8E5tFPW96ngJ8i76Lia763wVtNX6
process.cardanominttokentool.subheader.additionalNftProperties=Additional Properties
process.cardanominttokentool.nftProperties=NFT Properties
process.cardanominttokentool.nftProperties.fieldId=Field ID
process.cardanominttokentool.header.storeMintingPolicyToForm=Store Minting Policy To Form
process.cardanominttokentool.formDefIdStoreMintingPolicy=Form
process.cardanominttokentool.subheader.fieldMapping=Field Mapping
process.cardanominttokentool.policyIdField=Minting Policy ID
process.cardanominttokentool.policyIdField.desc=The unique identifier of a minting policy. Typically stored as a record ID.
process.cardanominttokentool.policyScriptField=Minting Policy Script
process.cardanominttokentool.policySecretKeyField=Minting Policy Secret Key (encrypted)
process.cardanominttokentool.policySecretKeyField.desc=The secret key(s) that signed the minting policy.<br>This value will be stored as encrypted value in the database.
process.cardanominttokentool.minterAccountField=Minting Account
process.cardanominttokentool.isTestnetField=Is Testnet Flag
process.cardanominttokentool.header.storeAssetDataToForm=Store Asset Data To Form
process.cardanominttokentool.formDefIdStoreAssetData=Form
process.cardanominttokentool.assetIdField=Asset ID
process.cardanominttokentool.assetIdField.desc=The unique identifier of a minted asset.<br>The asset ID is basically a combination of the policy ID and hex encoded token name.
process.cardanominttokentool.tokenNameField=Token Name
process.cardanominttokentool.policyIdFkField=Associated Policy ID
process.cardanominttokentool.policyIdFkField.desc=The policy ID that minted this asset
process.cardanominttokentool.assetOwnerField=Asset Owner Account
process.cardanominttokentool.isAssetOnTestnetField=Is Testnet Flag

process.cardanoburntokentool.header.config=Configure Cardano Burn Token Tool
process.cardanoburntokentool.helplink=https://dev.joget.org/community/display/marketplace/Cardano+Burn+Token+Tool
process.cardanoburntokentool.header.tokenBurningProperties=Token Burning Properties
process.cardanoburntokentool.formDefId=Form
process.cardanoburntokentool.subheader.mintingAccount=Minting Account
process.cardanoburntokentool.senderAddress=Account Address
process.cardanoburntokentool.senderAddress.desc=The address that previously minted the token.
process.cardanoburntokentool.accountMnemonic=Account Mnemonic Phrase
process.cardanoburntokentool.accountMnemonic.desc=Mnemonic phrase of the minting account. Only accepts a hash variable that points to the encrypted stored mnemonic phrase.
process.cardanoburntokentool.subheader.tokenBurningConfig=Token Burning Configuration
process.cardanoburntokentool.burnType=Burn Type
process.cardanoburntokentool.burnType.nativeToken=Native Token
process.cardanoburntokentool.burnType.nft=NFT
process.cardanoburntokentool.assetId=Asset ID
process.cardanoburntokentool.assetId.desc=The asset ID is basically a combination of the policy ID and hex encoded asset name.<br>The asset name is automatically derived from this value.
process.cardanoburntokentool.policyId=Minting Policy ID
process.cardanoburntokentool.policyId.desc=The policy ID that was previously used to mint the token.
process.cardanoburntokentool.policySigningKey=Minting Policy Secret Key (encrypted)
process.cardanoburntokentool.policySigningKey.desc=The secret key that was previously used to sign the minting policy.<br>Only accepts a hash variable that points to the encrypted stored policy secret key.
process.cardanoburntokentool.amountToBurn=Amount To Burn
process.cardanoburntokentool.amountToBurn.desc=Amount of native tokens to burn.

form.cardanoaccountloadbinder.header.config=Configure Cardano Account Load Binder
form.cardanoaccountloadbinder.helplink=https://dev.joget.org/community/display/marketplace/Cardano+Account+Load+Binder
form.cardanoaccountloadbinder.accountAddress=Account Address
form.cardanoaccountloadbinder.accountAddress.desc=Account base address. Hash variable is also accepted.
form.cardanoaccountloadbinder.header.mapToFields=Map Value To Form Fields
form.cardanoaccountloadbinder.mapToFields.adaBalanceField=ADA Balance
form.cardanoaccountloadbinder.mapToFields.tokenBalanceDisplayMode=Token Balance Display Mode
form.cardanoaccountloadbinder.mapToFields.tokenBalanceDisplayMode.showSelected=Show Selected
form.cardanoaccountloadbinder.mapToFields.tokenBalanceDisplayMode.showAll=Show All
form.cardanoaccountloadbinder.mapToFields.assetBalances=Asset Balances
form.cardanoaccountloadbinder.mapToFields.assetBalances.assetId=Asset ID
form.cardanoaccountloadbinder.mapToFields.assetBalances.formFieldId=Map to Form Field
form.cardanoaccountloadbinder.mapToFields.assetBalancesField=Asset Balance Field (JSON)
form.cardanoaccountloadbinder.mapToFields.assetBalancesField.desc=Displays all token balances in JSON format
form.cardanoaccountloadbinder.mapToFields.hideAssets=Hide Asset(s)
form.cardanoaccountloadbinder.mapToFields.hideAssets.desc=Paste in the asset ID of token(s) you want to hide, separated by new line or semicolon (;)<br>Accepts hash variable.
form.cardanoaccountloadbinder.mapToFields.accountType=Account Type

form.cardanometadataloadbinder.header.config=Configure Cardano Metadata Load Binder
form.cardanometadataloadbinder.helplink=https://dev.joget.org/community/display/marketplace/Cardano+Metadata+Load+Binder
form.cardanometadataloadbinder.transactionId=Transaction ID
form.cardanometadataloadbinder.transactionId.desc=Also known as Transaction Hash, Tx Hash, or TxID. Hash variable is also accepted.
form.cardanometadataloadbinder.header.mapToFields=Map Metadata Fields To Form Fields
form.cardanometadataloadbinder.metadata=Metadata
form.cardanometadataloadbinder.metadata.metadataField=Metadata Field
form.cardanometadataloadbinder.metadata.formFieldId=Map to Form Field

form.cardanotokenloadbinder.header.config=Configure Cardano Token Load Binder
form.cardanotokenloadbinder.helplink=https://dev.joget.org/community/display/marketplace/Cardano+Token+Load+Binder
form.cardanotokenloadbinder.assetId=Asset ID
form.cardanotokenloadbinder.assetId.desc=Token ID. Hash variable is also accepted.
form.cardanotokenloadbinder.header.mapToFields=Map Value To Form Fields
form.cardanotokenloadbinder.mapToFields.assetName=Asset Name
form.cardanotokenloadbinder.mapToFields.policyId=Policy ID
form.cardanotokenloadbinder.mapToFields.fingerprint=Fingerprint
form.cardanotokenloadbinder.mapToFields.quantity=Quantity
form.cardanotokenloadbinder.mapToFields.initialMintTxHash=Initial Mint Transaction Hash
form.cardanotokenloadbinder.mapToFields.mintOrBurnCount=Mint or Burn Count
form.cardanotokenloadbinder.mapToFields.onchainMetadata=On Chain Metadata

form.cardanoexplorerlinkformelement.header.config=Configure Cardano Explorer Link
form.cardanoexplorerlinkformelement.helplink=https://dev.joget.org/community/display/marketplace/Cardano+Explorer+Link+Form+Element
form.cardanoexplorerlinkformelement.subheader.valueRetrieval=Value Retrieval
form.cardanoexplorerlinkformelement.subheader.valueRetrieval.caution=Unofficial Cardano explorer websites may contain errors or mistakes. Please use them at your <b>OWN</b> risk.
form.cardanoexplorerlinkformelement.explorerType=Explorer Type
form.cardanoexplorerlinkformelement.explorerType.native=Native Cardano Explorer
form.cardanoexplorerlinkformelement.explorerType.cardanoscan=cardanoscan.io
form.cardanoexplorerlinkformelement.explorerType.cexplorer=cexplorer.io
form.cardanoexplorerlinkformelement.valueType=Value Type
form.cardanoexplorerlinkformelement.valueType.transactionId=Transaction ID
form.cardanoexplorerlinkformelement.valueType.accountAddress=Account Address
form.cardanoexplorerlinkformelement.valueType.tokenPolicy=Policy ID
form.cardanoexplorerlinkformelement.valueType.assetId=Asset ID
form.cardanoexplorerlinkformelement.getValueMode=Get Value Via
form.cardanoexplorerlinkformelement.getValueMode.fieldId=Field ID
form.cardanoexplorerlinkformelement.getValueMode.hashVariable=Hash Variable
form.cardanoexplorerlinkformelement.getValueMode.workflowVariable=Workflow Variable
form.cardanoexplorerlinkformelement.getFieldId=Field ID
form.cardanoexplorerlinkformelement.textHashVariable=Hash Variable
form.cardanoexplorerlinkformelement.subheader.customizeLinkUi=Customize Link UI
form.cardanoexplorerlinkformelement.displayAs=Display As
form.cardanoexplorerlinkformelement.displayAs.button=Button
form.cardanoexplorerlinkformelement.displayAs.hyperlink=Hyperlink
form.cardanoexplorerlinkformelement.buttonLabel=Button Label
form.cardanoexplorerlinkformelement.hyperlinkLabel=Hyperlink Label
form.cardanoexplorerlinkformelement.hyperlinkLabel.desc=If this is blank, the hyperlink label will be the URL itself
form.cardanoexplorerlinkformelement.linkTarget=Link Target
form.cardanoexplorerlinkformelement.linkTarget.currentWindow=Current Window
form.cardanoexplorerlinkformelement.linkTarget.newTab=New Tab
form.cardanoexplorerlinkformelement.invalidValueBehavior=Invalid Value Behavior
form.cardanoexplorerlinkformelement.invalidValueBehavior.showAsIs=Show As Is
form.cardanoexplorerlinkformelement.invalidValueBehavior.disableLink=Disable Link
form.cardanoexplorerlinkformelement.invalidValueBehavior.hideLink=Hide Link
